# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
class Solution(object):
    def levelOrder(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[List[int]]
        """
        list_of_lists=[]
        
        queue=deque()
        if root:
            queue.append(root)
            
        level=0
        while len(queue)>0:
            result=[]
            for i in range (len(queue)):
                curr=queue.popleft()
                result.append(curr.val)

                
                if curr.left:
                    queue.append(curr.left)
                if curr.right:
                    queue.append(curr.right)
                
            level+=1
            list_of_lists.append(result)
        return list_of_lists
            

