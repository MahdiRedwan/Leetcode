# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
class Solution(object):
    def rightSideView(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[int]
        """
        
        
        if not root:
            return []
        queue=deque([root])
        result=[]
        
            
        
        while len(queue)>0:
            len_current_level=len(queue)
            for i in range (len_current_level):
                curr=queue.popleft()
                if i==len_current_level-1:
                    result.append(curr.val)
                 

                
                if  curr.left:
                    queue.append(curr.left)
                if  curr.right:
                    queue.append(curr.right)
            
            
            
        return result

        